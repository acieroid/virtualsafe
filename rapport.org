#+TITLE: INFO-F-405 -- Computer Security -- Project 2
#+AUTHOR: Group 3 -- Vadim Baele, Marwan Bellouti, Quentin Stievenart, Damien Wiltgen
#+LATEX_HEADER: \usepackage[a4paper]{geometry}
#+LATEX_HEADER: \geometry{hscale=0.7,vscale=0.7,centering}
#+LATEX_HEADER: \usepackage[pdftex]{hyperref}
#+LATEX_HEADER: \hypersetup{colorlinks,citecolor=black,filecolor=black,linkcolor=black,urlcolor=black}
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t todo:nil
* TODO Implementation choices
** DONE Cryptographic methods used
Unsecure cryptographic methods (MD5, DES, ...) were avoided, and the
following methods were chosen:
  - AES-256 with a random IV for encrypting documents
  - SHA1 as a cryptographic hash function
  - RSA with 2048-bit keys for signing

In the rest of this document, when we refer to /encrypt something/, it
means encrypting it with AES-256 with a random IV. When we refer to
/hash something/, it means hashing it with SHA1. When we refer to
/sign something/, it refers to sign it with RSA using 2048-bit keys
and SHA1 as the hash function.
** DONE Securing the data on the server
*** User passwords
The user passwords are stored on the database. There were multiple
way to store them:
  1. *plain password*: store the plain password, which should be
     avoided because anyone having (potentially malicously) read
     access to the database will know the password of every user~;
  2. *hashed password*: store the hash of the password using a secure
     cryptographic hash function, which has the disadvantage of having
     the same stored value for two identical passwords~;
  3. *hashed password with salt*: store the hash of the string formed
     by the password concatened to a salt, and store the salt used,
     which has the advantage of having different stored passwords for
     identical passwords.

The third method, which is the most secure, was chosen. The stored
password is the hash of /name|password|salt/, where name is the name
of the user, password its password, and salt a (pseudo-)random
value. The '|' characters are there to have a different scheme from
what is advised on the internet, to avoid finding the password from
the hash by using a precomputed online table containing such hashes.
*** Files
We found multiple way to encrypt files on the server:
  1. Using symmetric encryption with only one key, stored on the
     filesystem or in the application code source. This has the
     disadvantage that when the server is compromised, the encryption
     key can be found and every file can then be decrypted.
  2. Using symmetric encryption with one key and a salt, where the
     salt is stored in the database and is different for each
     file. This has the advantage that if the database server is
     separated from the fileserver, having one of the two server
     compromised does not compromise the files
  3. Using symmetric encryption with a different key for each file,
     saving the key in the database. This has the same advantage as
     the second method.
  4. Encrypt the file with the user's public-key. This has the
     advantage that for big files, the encryption might be slow
     (asymmetric encryption is slower than symmetric encryption) and
     that it requires the file to be saved multiple times (once for
     each user) if it is shared among multiple users.
  5. Using a method similar to PGP: each file is encrypted with a
     random key, the random key is encrypted with the user's public
     key and saved on the filesystem. This has the advantage that in
     any case, the files on the server could not be decrypted by
     somebody who has access to all of the server's file and
     databases. However, it requires more manipulations by the user.

Even though the last method complicates the user manipulations, it was
chosen, because the program given with the application could be able
to do most of the work for the user.

To summarize how this method works:
  - When the user signs up to the application, the server creates two
    pairs of keys (one for generating and verifying signature, the
    other for the encryption and decryption) and gives them to the
    user, which should copy them into the program given with the
    application
  - When the user wants to upload a file, he uses the program to
    compute the file's signature, and upload the file with its
    signature to the server. The server then generates a random key,
    encrypt the file with this random key, encrypt the random key with
    the user's public key and saves both the encrypted file, the
    encrypted key and the signature to the file system
  - When the user wants to download a file, he downloads the encrypted
    file, the encrypted key and the signature. He decrypts the secret
    key with its private key, decrypts the file with the secret key,
    and check that the resulting file matches the signature
  - When the user /A/ wants to share a file, he downloads the
    encrypted key and the public key of the user he wants to share the
    file with (/B/). He decrypts the encrypted secret key with its
    private key, encrypts it with /B/'s public-key, and send the
    result to the server, which saves it
* TODO Threat model
This threat model was done using the methods described by the OWASP
project[fn::=https://www.owasp.org/index.php/Application_Threat_Modeling=]
and by
Microsoft[fn::=http://msdn.microsoft.com/en-us/library/ms978527.aspx=]. It
is organized as in the Microsoft's Web Application Threat Model
Template[fn::=http://msdn.microsoft.com/en-us/library/ff648866.aspx=].

#+CAPTION: Application description
#+ATTR_LaTeX: longtable align=|c|p{0.7\textwidth}|
|---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| *Name*        | Virtual Safe                                                                                                                                                                                                                                                                                                                                                                                                                                   |
|---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| *Version*     | 1.0                                                                                                                                                                                                                                                                                                                                                                                                                                            |
|---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| *Authors*     | Vadim Baele, Marwan Bellouti, Quentin Stievenart, Damien Wiltgen                                                                                                                                                                                                                                                                                                                                                                               |
|---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| *Description* | The application consists of a web service that allows the users to upload files on the service, knowing they will be securely saved. The users can then share files with other users, to allow other users to read those files. The service also have administrators, who have the responsibility to validate the user accounts. A program is made available to the users to manage their certificate and keys, and to sign and decrypt files. |
|---------------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|

** DONE Security objectives
The security objectives of the applications are:
  - Prevent an attacker from obtaining files accessible by the
    application's users without having the authorization from the
    file owner
  - Protect the integrity of the files, ie. prevent an attacker to
    modify a file stored by some user without the user noticying it.
  - Prevent an attacker to validate non valid users
  - Prevent an attacker to log in with another user account or with
    an administrator account
  - Prevent an attacker to obtain user or administrator passwords
  - Prevent an attacker to obtain a user's private keys
** TODO Application Overview
*** TODO End-to-End Deployment Scenario
*** DONE Roles
There are two kinds of users of the web service: users and
administrators. They have the following roles
  - Administrators can validate user accounts, but cannot do anything else
  - Users can read and update their own data

Other trusts levels can be identified, and are listed in the
following table:
#+CAPTION: Trust Levels
#+ATTR_LaTeX: longtable align=|c|p{3cm}|p{0.7\textwidth}|
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
| *ID* | *Name*                               | *Description*                                                                                                                 |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    1 | Anonymous web user                   | A user who has connected to the application and is not logged                                                                 |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    2 | User with valid credentials          | A user who is logged in the application using valid login credentials                                                         |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    3 | Administrator with valid credentials | An administrator of the website who is logged in the application using valid credentials                                      |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    4 | Server administrator                 | The administrator who has access to the server with a root account                                                            |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    5 | Database web user                    | The database user who has access to the tables 'user', 'file' and 'share' in read and write, and to the 'admin' table in read |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    6 | Database admin user                  | The database user who has access to the table 'admin' in read and write                                                       |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|

*** DONE Key Scenarios
The key scenarios are listed in the following table:
#+CAPTION: Usage scenarios
#+ATTR_LaTeX: longtable align=|c|p{\textwidth}|
|------+---------------------------------------------------------------|
| *ID* | *Description*                                                 |
|------+---------------------------------------------------------------|
|------+---------------------------------------------------------------|
|    1 | Anonymous user creates new (non-valid) account                |
|------+---------------------------------------------------------------|
|    2 | Administrator validates a non valid account                   |
|------+---------------------------------------------------------------|
|    3 | User logs in with a valid account                             |
|------+---------------------------------------------------------------|
|    4 | User lists its own files                                      |
|------+---------------------------------------------------------------|
|    5 | User lists the files shared by him                            |
|------+---------------------------------------------------------------|
|    6 | User lists the files shared with him                          |
|------+---------------------------------------------------------------|
|    7 | User download a file (either owned by him or shared with him) |
|------+---------------------------------------------------------------|
|    8 | User shares a file with another user                          |
|------+---------------------------------------------------------------|
|    9 | User uploads a file along with its signature                  |
|------+---------------------------------------------------------------|
|   10 | User revocates its certificate                                |
|------+---------------------------------------------------------------|
|   11 | User deletes a file he owns                                   |
|------+---------------------------------------------------------------|

*** DONE Technologies
  - *Operating System*: FreeBSD 8.3
  - *Web Server Software*: Apache 2.2.23 with OpenSSL 1.0.1 to
    encrypt HTTP traffic
  - *Database Server Software*: MySQL 5.5.28
  - *Development Languages*: PHP 5.4.7 and Java
  - *Data Access Logic*: PDO (PHP)
  - *Business Logic*: PHP classes

The external dependencies are explained in more details in the
following table. The security of the application depends on the
security of those external dependencies.
#+CAPTION: External Dependencies
#+ATTR_LaTeX: longtable align=|c|p{\textwidth}|
|------+-------------------------------------------------------------------------------------------------------------------------|
| *ID* | *Description*                                                                                                           |
|------+-------------------------------------------------------------------------------------------------------------------------|
|------+-------------------------------------------------------------------------------------------------------------------------|
|    1 | The application will run on a FreeBSD server running Apache. This server will be configured in a secure way.            |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    2 | The database server will be MySQL and it will run on the same FreeBSD server. The MySQL configuration will be hardened. |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    3 | The connection between the web server and the database will only be done on the same machine.                           |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    4 | The server is behind a firewall and the only communication available will be HTPS.                                      |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    5 | The application will be written with PHP. The default configuration of PHP will be hardened.                            |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    6 | The PHP libraries used are mcrypt, openssl, pdo.                                                                        |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    7 | The program given with the application will use Java and the Bouncy Castle library.                                     |
|------+-------------------------------------------------------------------------------------------------------------------------|
*** DONE Application Security Mechanisms
  - Sensitive data is stored encrypted (files) or hashed (passwords)
    using secure methods.
  - Every communication with the web server is made over an encrypted
    channel, which is considered secure.
  - The web service is authenticated to the database using MySQL
    authentication scheme.
  - Server administration can only be performed from a SSH connection to
    the server's host, available only when having an accepted private
    key.
  - The server's logs are monitored by =logwatch=, and any suspect
    behaviour should be detected, the server's administrator will be
    notified.
  - The server's software versions are monitored by =portaudit=, and
    any security flaw should be discovered in one of the installed
    software, the server's administrator will be immediately notified
    and should perform what is necessary to ensure the application
    security.
** TODO Application Decomposition
*** DONE Trust Boundaries
Identified trust boundaries are:
  - The perimeter firewall
  - The database trusts calls from the identified web application
*** TODO Data Flows
The general flow of data is represented in figure
\ref{fig:general-flow}

\begin{figure}[ht!]
\centerline{\includegraphics[width=1.3\textwidth]{dfd.png}}
\caption{General dataflow of the web service}\label{fig:general-flow}
\end{figure}

# TODO: plus de diagrammes ou de texte pour expliquer les autres data
# flows
*** DONE Entry Points
Entry points are described in the following table

#+CAPTION: Entry points
#+ATTR_LaTeX: longtable align=|c|p{3cm}|p{0.6\textwidth}|p{3cm}|
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
| *ID* | *Name*                           | *Description*                                                                                                            | *Trust Levels*                                                                                                           |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|    1 | HTTPS port                       | The application will only be accessible via HTTPS. All the pages of the applications are available from this entry point | (1) Anonymous web user (2) User with valid credentials (3) Administrator with valid credentials (4) Server administrator |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.1 | Admin login page                 | The page allowing administrators to connect using using their login credentials                                          | (1) Anonymous web user                                                                                                   |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.2 | User validation page             | The page allowing administrator to validate non-valid users                                                              | (3) Administrator with valid credentials                                                                                 |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.3 | User login page                  | The page allowing users to connect using their login credentials                                                         | (1) Anonymous web user (2) User with valid credentials                                                                   |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.4 | Account creation page            | The page allowing anonymous users to create a new account                                                                | (1) Anonymous web user                                                                                                   |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.5 | User file list                   | The page listing the files that the user can access                                                                      | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.6 | User file download               | The page that let the user download a file                                                                               | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.7 | User share page                  | The page allowing the user to share files with other users                                                               | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.8 | User file deletion page          | The page that let the user delete one of its files                                                                       | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
|  1.9 | User certificate revocation page | The page allowing the user to revocate its certificate                                                                   | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
| 1.10 | User file upload page            | The page allowing the user to upload a new file                                                                          | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
| 1.11 | User password modification page  | The page allowing the user to change its password                                                                        | (2) User with valid credentials                                                                                          |
|------+----------------------------------+--------------------------------------------------------------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------|
*** DONE Exits Points
Exits points are:
  - The file list page, which displays the file name specified by the
    file owner
  - The menu of the application, which display the user's name
*** DONE Assets
#+CAPTION: Assets
#+ATTR_LaTeX: longtable align=|c|p{3cm}|p{0.6\textwidth}|p{3cm}|
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
| *ID* | *Name*                          | *Description*                                   | *Trust Levels*                                                                         |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|    1 | User data                       | All data related to the users                   | (2) User with valid credentials (4) Server administrator (5) Database web user         |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|  1.1 | User login credentials          | The user names and their passwords              | (2) User with valid credentials (5) Database web user                                  |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|  1.2 | User file list                  | The lists of the file that belong to an user    | (2) User with valid credentials (4) Server administrator (5) Database web user         |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|  1.3 | User files                      | The files of the user stored in the file system | (2) User with valid credentials (4) Server administrator                               |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|    2 | Administrator data              | All data related to the administrators          | (3) Administrator with valid credentials (5) Database web user (6) Database admin user |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|
|  2.1 | Administrator login credentials | The administrator names and their passwords     | (3) Administrator with valid credentials (5) Database web user (6) Database admin user |
|------+---------------------------------+-------------------------------------------------+----------------------------------------------------------------------------------------|

** TODO Threats
The tables that follows lists the existing threats.
#+CAPTION: Threat: Access to login credentials
#+ATTR_LaTeX: longtable align=|p{3cm}|p{0.8\textwidth}|
|-------------------------+----------------------------------------------------------------------------------------------|
| *ID*                    | 1                                                                                            |
|-------------------------+----------------------------------------------------------------------------------------------|
| *Description*           | Attacker get access to an user or admin login credentials                                    |
|-------------------------+----------------------------------------------------------------------------------------------|
| *STRIDE classification* | Elevation of privileges                                                                      |
|-------------------------+----------------------------------------------------------------------------------------------|
| *Notes*                 | The security of the login credetials depend on the cryptographic methods used to store them. |
|-------------------------+----------------------------------------------------------------------------------------------|
| *Entry points*          | (1.1) Admin login page (1.3) User login page                                                 |
|-------------------------+----------------------------------------------------------------------------------------------|
| *Assets*                | (1.1) User login credentials (2.1) Administrator login credentials                           |
|-------------------------+----------------------------------------------------------------------------------------------|
| *Threat tree*           | None                                                                                         |
|-------------------------+----------------------------------------------------------------------------------------------|

#+CAPTION: Threat: User password modification
#+ATTR_LaTeX: longtable align=|p{3cm}|p{0.8\textwidth}|
|-------------------------+-----------------------------------------------|
| *ID*                    | 2                                             |
|-------------------------+-----------------------------------------------|
| *Description*           | Attacker force an user to change its password |
|-------------------------+-----------------------------------------------|
| *STRIDE classification* | Tampering, Elevation of privileges            |
|-------------------------+-----------------------------------------------|
| *Notes*                 |                                               |
|-------------------------+-----------------------------------------------|
| *Entry points*          | (1.11) User password modification page        |
|-------------------------+-----------------------------------------------|
| *Assets*                | (1.1) User login credentials                  |
|-------------------------+-----------------------------------------------|
| *Threat tree*           | None                                          |
|-------------------------+-----------------------------------------------|


#+CAPTION: Threat: SQL injection in user input
#+ATTR_LaTeX: longtable align=|p{3cm}|p{0.8\textwidth}|
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *ID*                    | 3                                                                                                     |
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *Description*           | Attacker injects SQL commands through user input forms                                                |
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *STRIDE classification* | Tampering, Elevation of privileges                                                                    |
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *Notes*                 |                                                                                                       |
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *Entry points*          | (1.1) Admin login page (1.3) User login page (1.4) Account creation page (1.10) User file upload page |
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *Assets*                | (X.Y) Access to backned database                                                                      |
|-------------------------+-------------------------------------------------------------------------------------------------------|
| *Threat tree*           | None                                                                                                  |
|-------------------------+-------------------------------------------------------------------------------------------------------|

TODO:
  - Access to the configuration data
  - Access to user files
  - Session hijacking
  - Access to encryption keys
  - Crashing the application
** TODO Vulnerabilities
#+CAPTION: Vulnerability: SQL Injection
#+ATTR_LaTeX: longtable align=|p{3cm}|p{0.8\textwidth}|
|---------------------------+---|
| *ID*                      | 1 |
|---------------------------+---|
| *Name*                    |   |
|---------------------------+---|
| *Description*             |   |
|---------------------------+---|
| *STRIDE classification*   |   |
|---------------------------+---|
| *DREAD rating*            |   |
|---------------------------+---|
| *Corresponding threat ID* |   |
|---------------------------+---|
