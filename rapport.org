#+TITLE: INFO-F-405 -- Computer Security -- Project 2
#+AUTHOR: Group 3 -- Vadim Baele, Marwan Bellouti, Quentin Stievenart, Damien Wiltgen
#+LATEX_HEADER: \usepackage[a4paper]{geometry}
#+LATEX_HEADER: \geometry{hscale=0.7,vscale=0.7,centering}
#+LATEX_HEADER: \usepackage[pdftex]{hyperref}
#+LATEX_HEADER: \hypersetup{colorlinks,citecolor=black,filecolor=black,linkcolor=black,urlcolor=black}
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
* Implementation choices
** Cryptographic methods used
Unsecure cryptographic methods (MD5, DES, ...) were avoided, and the
following methods were chosen:
  - AES-256 with a random IV for encrypting documents
  - SHA1 as a cryptographic hash function
  - RSA with 2048-bit keys for signing

In the rest of this report, when we refer to /encrypt something/, it
means encrypting it with AES-256 with a random IV. When we refer to
/hash something/, it means hashing it with SHA1. When we refer to
/sign something/, it refers to sign it with RSA using 2048-bit keys
and SHA1 as the hash function.
** Securing the data on the server
*** User passwords
The user passwords are stored on the database. There were multiple
way to store them:
  1. *plain password*: store the plain password, which should be
     avoided because anyone having (potentially malicously) read
     access to the database will know the password of every user~;
  2. *hashed password*: store the hash of the password using a secure
     cryptographic hash function, which has the disadvantage of having
     the same stored value for two identical passwords~;
  3. *hashed password with salt*: store the hash of the string formed
     by the password concatened to a salt, and store the salt used,
     which has the advantage of having different stored passwords for
     identical passwords.

The third method, which is the most secure, was chosen. The stored
password is the hash of /name|password|salt/, where name is the name
of the user, password its password, and salt a (pseudo-)random
value. The '|' characters are there to have a different scheme from
what is advised on the internet, to avoid finding the password from
the hash by using a precomputed online table containing such hashes.
*** Files
We found multiple way to encrypt files on the server:
  1. Using symmetric encryption with only one key, stored on the
     filesystem or in the application code source. This has the
     disadvantage that when the server is compromised, the encryption
     key can be found and every file can then be decrypted.
  2. Using symmetric encryption with one key and a salt, where the
     salt is stored in the database and is different for each
     file. This has the advantage that if the database server is
     separated from the fileserver, having one of the two server
     compromised does not compromise the files
  3. Using symmetric encryption with a different key for each file,
     saving the key in the database. This has the same advantage as
     the second method.
  4. Encrypt the file with the user's public-key. This has the
     advantage that for big files, the encryption might be slow
     (asymmetric encryption is slower than symmetric encryption) and
     that it requires the file to be saved multiple times (once for
     each user) if it is shared among multiple users.
  5. Using a method similar to PGP: each file is encrypted with a
     random key, the random key is encrypted with the user's public
     key and saved on the filesystem. This has the advantage that in
     any case, the files on the server could not be decrypted by
     somebody who has access to all of the server's file and
     databases. However, it requires more manipulations by the user.

Even though the last method complicates the user manipulations, it was
chosen, because the program given with the application could be able
to do most of the work for the user.

To summarize how this method works:
  - When the user signs up to the application, the server creates two
    pairs of keys (one for generating and verifying signature, the
    other for the encryption and decryption) and gives them to the
    user, which should copy them into the program given with the
    application
  - When the user wants to upload a file, he uses the program to
    compute the file's signature, and upload the file with its
    signature to the server. The server then generates a random key,
    encrypt the file with this random key, encrypt the random key with
    the user's public key and saves both the encrypted file, the
    encrypted key and the signature to the file system
  - When the user wants to download a file, he downloads the encrypted
    file, the encrypted key and the signature. He decrypts the secret
    key with its private key, decrypts the file with the secret key,
    and check that the resulting file matches the signature
  - When the user /A/ wants to share a file, he downloads the
    encrypted key and the public key of the user he wants to share the
    file with (/B/). He decrypts the encrypted secret key with its
    private key, encrypts it with /B/'s public-key, and send the
    result to the server, which saves it
* Threat model
This threat model was done using the methods described by the OWASP
project[fn::https://www.owasp.org/index.php/Application_Threat_Modeling]
and by Microsoft[fn::http://msdn.microsoft.com/en-us/library/ms978527.aspx].
** Application Decomposition
#+CAPTION: External Dependencies
#+ATTR_LaTeX: longtable align=|c|p{\textwidth}|
|------+-------------------------------------------------------------------------------------------------------------------------|
| *ID* | *Description*                                                                                                           |
|------+-------------------------------------------------------------------------------------------------------------------------|
|------+-------------------------------------------------------------------------------------------------------------------------|
|    1 | The application will run on a FreeBSD server running Apache. This server will be configured in a secure way.            |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    2 | The database server will be MySQL and it will run on the same FreeBSD server. The MySQL configuration will be hardened. |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    3 | The connection between the web server and the database will only be done on the same machine.                           |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    4 | The server is behind a firewall and the only communication available will be HTPS.                                      |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    5 | The application will be written with PHP. The default configuration of PHP will be hardened.                            |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    6 | The PHP libraries used are mcrypt, openssl, pdo.                                                                        |
|------+-------------------------------------------------------------------------------------------------------------------------|
|    7 | The program given with the application will use Java and the Bouncy Castle library.                                     |
|------+-------------------------------------------------------------------------------------------------------------------------|


#+CAPTION: Trust Levels
#+ATTR_LaTeX: longtable align=|c|p{3cm}|p{0.7\textwidth}|
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
| *ID* | *Name*                               | *Description*                                                                                                                 |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    1 | Anonymous web user                   | A user who has connected to the application and is not logged                                                                 |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    2 | User with valid credentials          | A user who is logged in the application using valid login credentials                                                         |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    3 | Administrator with valid credentials | An administrator of the website who is logged in the application using valid credentials                                      |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    4 | Server administrator                 | The administrator who has access to the server with a root account                                                            |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    5 | Database web user                    | The database user who has access to the tables 'user', 'file' and 'share' in read and write, and to the 'admin' table in read |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|
|    6 | Database admin user                  | The database user who has access to the table 'admin' in read and write                                                       |
|------+--------------------------------------+-------------------------------------------------------------------------------------------------------------------------------|


#+CAPTION: Entry points
#+ATTR_LaTeX: longtable align=|c|c|p{0.6\textwidth}|p{3cm}|
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
| *ID* | *Name*                | *Description*                                                                                                            | *Trust Levels*                                                                  |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|    1 | HTTPS port            | The application will only be accessible via HTTPS. All the pages of the applications are available from this entry point | (1) Anonymous web user (2) User with valid credentials (3) Server administrator |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|  1.1 | Login page            | The page allowing users to connect using their login credentials                                                         | (1) Anonymous web user (2) User with valid credentials                          |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|  1.2 | Account creation page | The page allowing anonymous users to create a new account                                                                | (1) Anonymous web user                                                          |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|  1.3 | Admin login page      | The page allowing administrators to connect using using their login credentials                                          | (1) Anonymous web user                                                          |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|  1.4 | TODO                  |                                                                                                                          |                                                                                 |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|
|    2 | Java application      |                                                                                                                          |                                                                                 |
|------+-----------------------+--------------------------------------------------------------------------------------------------------------------------+---------------------------------------------------------------------------------|

#+CAPTION: Assets
#+ATTR_LaTeX: longtable align=|c|c|p{0.8\textwidth}|c|
|------+---------------------------------+----------------------------------------------------------------------------------+----------------|
| *ID* | *Name*                          | *Description*                                                                    | *Trust Levels* |
|------+---------------------------------+----------------------------------------------------------------------------------+----------------|
|------+---------------------------------+----------------------------------------------------------------------------------+----------------|
|    1 | Users                           | Assets relating to the users of the system                                       |                |
|  1.1 | User Login Details              | The login credentials that a user will use to log into the application           |                |
|    2 | Administrators                  | Assets relating to the administrators of the system                              |                |
|  2.1 | Administarot Login Details      | The login credentials that a administrator will use to log into the application  |                |
|    3 | System                          | Assets relating to the underlying system                                         |                |
|  3.1 | Availability of the application | The application should be available 24 hours a day and can be accessed by anyone |                |
|  3.2 | Ability to execute code         |                                                                                  |                |

** Détermination et classement des risques
** Détermination des contremesures
